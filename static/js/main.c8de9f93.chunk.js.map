{"version":3,"sources":["actions/postReview.js","components/reviews/addReviewInput.jsx","components/reviews/Reviews.jsx","containers/ReviewsContainer.jsx","components/businesses/Business.jsx","components/businesses/Businesses.jsx","containers/BusinessesContainer.jsx","actions/fetchReviews.js","components/featuredEvent/FeaturedEvents.jsx","containers/FeaturedEventContainer.jsx","components/users/user.jsx","actions/logOutUser.js","App.js","reducers/combineReducers.js","reducers/businessReducer.js","reducers/eventReducer.js","reducers/userReducer.js","components/businesses/searchBusinessesInput.jsx","actions/fetchBusinesses.js","actions/fetchEvents.js","components/featuredEvent/featuredEventInput.jsx","components/users/Signup.jsx","actions/createUser.js","components/users/Login.jsx","actions/loginUser.js","index.js"],"names":["postReview","review","reviews","dispatch","user","JSON","parse","localStorage","currentUser","user_name","first_name","last_name","fetch","method","headers","Accept","body","stringify","then","resp","json","data","type","payload","alert","connect","state","business","AddReviewInput","props","handleChange","event","setState","target","name","value","changeRating","newRating","rating","handleSubmit","preventDefault","newReview","text","unshift","Fragment","onSubmit","this","onChange","min","max","Component","Reviews","thisBusinessesReviews","filter","business_id","id","className","map","key","style","width","businesses","ReviewsContainer","borderTop","borderBottom","Business","handleClickRevealReviews","refs","btn","setAttribute","fetchReviews","align","alt","src","image_url","price","review_count","categories","c","title","ref","padding","textalign","display","fontsize","onClick","Businesses","BusinessesContainer","includes","andSignIndex","indexOf","firstHalf","slice","secondHalf","length","Date","prototype","getUnixTime","getTime","now","time","FeaturedEvents","amOrPm","checkAmOrPm","hours","addZeroForSingleMinutes","minutes","events","startTime","time_start","startTimeHours","getHours","startTimeMinutes","getMinutes","endTime","time_end","endTimeHours","endTimeMinutes","attending_count","description","FeaturedEventContainer","User","logout","currentUserEmail","removeItem","logOutUser","window","location","reload","email","React","userEmail","message","App","rootReducer","combineReducers","loading","action","Object","assign","flat","newReviewsWBizIds","initialState","term","SearchBusinessesInput","fetchBusinesses","featuredEventInput","fetchEvents","date","searchDate","Signup","createUser","password","placeholder","setItem","Login","loginUser","store","createStore","applyMiddleware","thunk","link","margin","background","textDecoration","color","position","ReactDOM","render","to","exact","activeStyle","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.c8de9f93.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\n\nexport const postReview = (review, reviews) => {\n    return (dispatch) => {\n      try{\n        var user = JSON.parse(localStorage.currentUser)\n\n        let user_name = (user.first_name + \" \" + user.last_name)\n        //add user_name to review\n        review[\"user\"] = user\n        review[\"user_name\"] = user_name\n        return fetch(`http://localhost:3000/api/v1/reviews`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n            },\n            body: JSON.stringify({review})\n          })\n        .then(resp => resp.json())\n        .then(data => {\n            //check how many reviews there are now\n            //AJAX to now show the new one at the top\n            dispatch({type: 'ADD_REVIEW', payload: [data, reviews]})\n            //error handle\n            //dispatch to store reviews and display them\n        })\n      }\n      catch{\n        //error catch if there is no current user\n        alert('Please Log In To Be Able Leave A Review.')\n      }\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n  debugger\n  return {\n    reviews: state.business.reviews\n  }\n}\n\n\nexport default connect(mapStateToProps)(postReview)","import React, {Component} from 'react'\nimport {postReview} from '../../actions/postReview'\nimport { connect } from 'react-redux';\nimport NumericInput from 'react-numeric-input';\n\nclass AddReviewInput extends Component {\n  constructor(props){\n      super(props)\n      this.state = {\n        text:'',\n        rating: 1,\n        business: this.props.business\n      }\n    }\n\n    handleChange = (event) => {\n      this.setState({\n          [event.target.name]: event.target.value\n      })\n    }\n\n    changeRating = (newRating) => {\n      this.setState({\n        rating: newRating\n      })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      //grab currentuser from localstorage\n      this.props.postReview(this.state, this.props.reviews)\n      try{\n        const newReview = {first_name: this.state.user.first_name, last_name: this.state.user.last_name, text: this.state.text, rating: this.state.rating}\n        this.props.reviews.unshift(newReview)\n      }\n      catch{\n      }\n      //add new review to front of reviews\n      this.setState({\n        text: '',\n        rating: 1\n      })\n      //reset components' state\n      //needs to make reviews update now dynamically on page\n    }\n    \n    render(){\n      return(\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit}>\n          <label>Leave Review</label>\n          <input type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange}/>\n          <NumericInput min={1} max={5} name=\"rating\" value={this.state.rating} onChange={this.changeRating}/>\n          <input type=\"submit\" value=\"Add Review\"/>\n        </form>\n      </React.Fragment>\n      )\n    }\n}\n\nexport default connect(null, {postReview})(AddReviewInput)\n","import React, {Component} from 'react';\nimport AddReviewInput from './addReviewInput';\nimport { connect } from 'react-redux';\n\nclass Reviews extends Component {\n\n\n    //do shouldComponentUpdate() due to new state with recently\n    //added review.\n\n    render(){\n        const thisBusinessesReviews = () => {\n            let newProps = this.props.reviews.filter(review => { \n                return (review.business_id === this.props.business.id)})\n            return newProps\n        }\n        \n        const renderReviews = () => {\n            return(\n                    <ul className=\"business-reviews\">\n                        {thisBusinessesReviews().map(review => {\n                            return(\n                                    <React.Fragment key={review.id}>\n                                        <li style={{width: '300px'}} key={review.id}>\n                                            <h4>{review.user ? review.user.name : review.user_name}</h4>\n                                            {\"\\n\"}\n                                            <p>Rating: {review.rating}</p>\n                                            {\"\\n\"}\n                                            <p>{review.text}</p>\n                                        </li>\n                                    </React.Fragment>\n                                )}\n                            )\n                        }\n                    </ul>\n                )\n            }\n            \n\n\n           return(\n                <div className=\"reviews\">\n                    {renderReviews()}\n                    <AddReviewInput reviews={thisBusinessesReviews()} business={this.props.business}/>\n                </div>\n           )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        businesses: state.businesses.businesses,\n        reviews: state.businesses.reviews\n    }\n}\n\nexport default connect(mapStateToProps)(Reviews);","import React, {Component} from 'react'\nimport Reviews from '../components/reviews/Reviews'\nimport { connect } from 'react-redux'\n\nclass ReviewsContainer extends Component {\n    \n    render(){\n        return(\n            <div>\n                <ol id=\"allReviews\" style={{borderTop: \"3px solid rgb(100, 100, 100)\",borderBottom: \"3px solid rgb(100, 100, 100)\"}}>\n                    <Reviews business={this.props.business} reviews={this.props.reviews} />\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        reviews: state.businesses.reviews\n    }\n}\n\nexport default connect(mapStateToProps)(ReviewsContainer)","import React, {Component} from 'react'\nimport ReviewsContainer from '../../containers/ReviewsContainer'\n\nclass Business extends Component {\n\n    handleClickRevealReviews = (event) => {\n        event.preventDefault();\n        this.refs.btn.setAttribute('disabled', 'disabled')\n        this.props.fetchReviews({id: this.props.business.id, name: this.props.business.name})\n    }\n\n    render(){\n        const buttonStyle = {\n            padding: '15px 32px',\n            textalign: 'center',\n            display: 'inline-block',\n            fontsize: '16px'\n        }\n        const business = this.props.business\n        return(\n            <React.Fragment>\n                <li align=\"left\" key={business.id}>\n                    <h4>{business.name}</h4>\n                    <img style={{align: 'left', width: '500px'}} alt=\"single business\" id={business.name} src={business.image_url}></img>\n                    <br/>\n                    <section>\n                    Price: {business.price}\n                    <br/>\n                    Total Reviews:{business.review_count}\n                    <br/>\n                    \n                    Categories: {business.categories.map(c => <ul key={c.id}> - {c.title}</ul>)} \n                    <br/>                \n                    </section>\n                    <br/>\n                    <button ref=\"btn\" style={buttonStyle} onClick={this.handleClickRevealReviews}>Reviews</button>\n                    <ReviewsContainer business={business}/>\n                </li>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Business","import React, {Component} from 'react'\nimport Business from './Business'\n\nexport default class Businesses extends Component {\n    \n    render(){\n        const generateBusinesses = () => {\n            return this.props.businesses.map(business => {\n                return <Business key={business.id} business= {business} fetchReviews={this.props.fetchReviews}/>\n            })\n        }\n\n        return (\n            <div className=\"container\">\n                <ol className=\"list-of-businesses\">\n                    {generateBusinesses()}\n                </ol>\n            </div>\n            \n        )\n    }\n\n}","import React, {Component} from 'react'\nimport Businesses from '../components/businesses/Businesses'\nimport { fetchReviews } from '../actions/fetchReviews'\nimport { connect } from 'react-redux'\n\nclass BusinessesContainer extends Component {\n\n    render(){\n        return(\n            <div id=\"businesses\" style={{display: 'inline-block'}}>\n                <Businesses businesses={this.props.businesses} fetchReviews={this.props.fetchReviews}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        businesses: state.businesses.businesses\n    }\n}\n\n\n\nexport default connect(mapStateToProps, {fetchReviews})(BusinessesContainer)","export const fetchReviews = (props) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_REVIEWS'})\n        if(props.name.includes('&')){\n            let andSignIndex = props.name.indexOf('&') \n            let firstHalf = props.name.slice(0, andSignIndex)\n            let and = \" and \"\n            let secondHalf = props.name.slice(andSignIndex + 1, props.name.length)\n            return fetch(`http://localhost:3000/api/v1/business_reviews?id=${props.id}&firstHalf=${firstHalf}&andSign=${and}&secondHalf=${secondHalf}`)\n            .then(resp => resp.json())\n            .then(reviews => {dispatch({type:'FETCH_REVIEWS', payload: [reviews, props.id]})})\n        }\n        else{\n            return fetch(`http://localhost:3000/api/v1/business_reviews?id=${props.id}&name=${props.name}`)\n            .then(resp => resp.json())\n            .then(reviews => {dispatch({type:'FETCH_REVIEWS', payload: [reviews, props.id]})})\n        }\n    }\n}","import React, {Component} from 'react'\nimport './eventForm.css'\n\nDate.prototype.getUnixTime = function() { return this.getTime()/1000|0 };\nif(!Date.now) Date.now = function() { return new Date(); }\nDate.time = function() { return Date.now().getUnixTime(); }\n\nclass FeaturedEvents extends Component { \n\n    render(){\n        let amOrPm = 'AM'\n        const checkAmOrPm = (hours) => {\n            if(hours > 12){\n                amOrPm = 'PM'\n                return hours - 12\n            }\n            else if(hours === 12){\n                amOrPm = 'PM'\n                return hours\n            }\n            else{\n                amOrPm = 'AM'\n                return hours\n            }\n        }\n        const addZeroForSingleMinutes = (minutes) => {return minutes < 10 ? '0' + minutes: minutes}\n\n        const renderEvents = () => {\n                return this.props.events.map(event =>{\n                    let startTime = new Date(event.time_start)\n                    let startTimeHours = startTime.getHours();\n                    let startTimeMinutes = startTime.getMinutes();\n                    let endTime = new Date(event.time_end)\n                    let endTimeHours = endTime.getHours();\n                    let endTimeMinutes = endTime.getMinutes();\n    \n                    if(typeof event.name === \"string\"){\n                        return(\n                            <li className=\"event\" key={event.id}>\n                                <h2>{event.name}</h2>\n                                <img alt=\"See your Event Live!\" src={event.image_url}></img>\n                                <p>            \n                                    {event.attending_count} guest(s) are attending\n                                    {'\\n'}\n                                    {event.description}\n                                </p>\n                                \n                                <p>From {checkAmOrPm(startTimeHours)}:{addZeroForSingleMinutes(startTimeMinutes)} {amOrPm} to {checkAmOrPm(endTimeHours)}:{addZeroForSingleMinutes(endTimeMinutes)} {amOrPm}</p>\n                            </li>\n                            )\n                        }\n                        else{\n                            return(\n                                <div></div>\n                            )\n                        }\n                    }\n                )\n            }\n            return(\n                <div>{renderEvents()}</div>\n            )\n        }\n    \n}\n\nexport default FeaturedEvents","import React, {Component} from 'react'\nimport FeaturedEvents from '../components/featuredEvent/FeaturedEvents'\nimport { connect } from 'react-redux'\n\nclass FeaturedEventContainer extends Component{\n\n\n    render(){\n        return(\n            <div className=\"events-container\">\n                <ol id=\"list-of-events\">\n                    <FeaturedEvents events={this.props.events}/>\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        events: state.events.events\n    }\n}\n\nexport default connect(mapStateToProps)(FeaturedEventContainer)\n\n","import React from 'react'\nimport './user.css'\nimport {logOutUser} from '../../actions/logOutUser'\nimport {connect} from 'react-redux'\n\nclass User extends React.Component{\n\n    logout = (currentUserEmail) => {\n        alert(`Have a great day ${this.props.currentUser.first_name}`)\n        localStorage.removeItem(\"currentUser\")\n        this.props.logOutUser(currentUserEmail)\n        window.location.reload(false);\n        //PAGE REFRESH TO TAKE AWAY CURRENT USER FOR GOOD\n    }\n\n    render(){\n        const currentUser = this.props.currentUser\n        if (currentUser !== null){\n            return(\n                <div className=\"userShowPage\">\n                    <h1>{currentUser.email}</h1>\n                    {\"\\n\"}\n                    <button onClick={() => this.logout(currentUser.email)}>Log Out</button>\n                </div>\n            )\n        }\n        else{\n            return null\n        }\n    }\n}\n\nexport default connect(null, {logOutUser})(User)\n\n","export const logOutUser = (userEmail) => {\n    return (dispatch) => {\n        return fetch(`http://localhost:3000/api/v1/logout?email=${userEmail}`)\n        .then(resp => resp.json())\n        .then(data => {\n            alert(data.message)\n            //use dispatch to clear currentUser out of state\n            dispatch({type:'LOGOUT_USER'})\n        })\n    }\n}","import React, { Component } from 'react';import './App.css';\nimport BusinessesContainer from './containers/BusinessesContainer'\nimport FeaturedEventContainer from './containers/FeaturedEventContainer'\nimport User from './components/users/user'\nimport {connect} from 'react-redux'\n\nexport class App extends Component{\n\n  render(){\n    return (\n      <div className=\"app\">\n        <BusinessesContainer />\n        <FeaturedEventContainer />\n        {localStorage.length !== 0 ? <User currentUser={JSON.parse(localStorage.currentUser)}/> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      currentUser: state.user.currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","import { combineReducers } from 'redux'\nimport businessReducer from './businessReducer'\nimport eventReducer from './eventReducer'\nimport userReducer from './userReducer'\n\nconst rootReducer = combineReducers({\n    businesses: businessReducer,\n    events: eventReducer,\n    user: userReducer\n})\n\nexport default rootReducer;","export default function businessReducer(state = {loading: false, businesses: [], reviews: []}, action){\n    switch(action.type){\n\n        case 'LOADING_BUSINESSES':\n            \n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_BUSINESSES':\n            \n            return {...state, businesses: [...state.businesses, action.payload].flat(), loading: false}\n\n        //REVIEWSREDUCER\n\n        case 'LOADING_REVIEWS':\n\n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_REVIEWS':\n            const newReviewsWBizIds = action.payload[0].map(review => {\n                return review = {...review, business_id: action.payload[1]}\n            })\n            //go through reviews in database and make business Id for review the id from yelps business id\n            return {...state, reviews: [...state.reviews, newReviewsWBizIds].flat(), loading: false} \n\n        case 'ADD_REVIEW':\n            //action.paylod[0] = review that was just added\n            //aciton.payload[1] = the 3-5 reviews before it\n            let reviews = [action.payload[0], action.payload[1]].flat()\n            return {...state, reviews, loading: false}\n        default:\n\n            return state\n\n    }\n}","export default function eventReducer(state={ loading: false, events: []}, action){\n    switch(action.type){\n        case 'LOADING_EVENT':\n\n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_EVENT':\n\n            return {...state, events: [...state.events, action.payload].flat(), loading: false}\n\n        default:\n\n            return state\n    }\n}","export default function userReducer(state={currentUser: {}}, action){\n    switch(action.type){\n        case 'LOGIN_USER':\n        //set user that was created as currentUser for \n        //state management across the App\n            return {...state, currentUser: action.payload}\n\n        case 'LOGOUT_USER':\n\n            return {...state, currentUser: null}\n\n        default:\n\n            return {...state, currentUser: null}\n\n    }\n\n}","import React, {Component} from 'react'\nimport './Input.css'\nimport { fetchBusinesses } from '../../actions/fetchBusinesses'\nimport { connect } from 'react-redux'\nconst initialState = {\n    term: '',\n    location: ''\n}\n\nexport class SearchBusinessesInput extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            term: '',\n            location: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchBusinesses(this.state)\n        this.setState(initialState)\n    }\n\n    render(){\n\n        return(\n     \n            <div className=\"input\">\n                <form onSubmit={this.handleSubmit} className=\"search-businesses-input\">\n                    <h1 className=\"form-header\">What Are You Looking For?</h1>\n                    <h2 className=\"looking-for-header\">Type of Food:</h2>\n                    <input className=\"looking-for-inputbox\" type=\"text\" name=\"term\" value={this.state.term} onChange={this.handleChange}/>\n                    <br/>\n                    <h2 className=\"location-header\">Location:</h2>\n                    <input className=\"location-inputbox\" type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleChange}/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <input className=\"submit-button\" type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default connect(null, {fetchBusinesses})(SearchBusinessesInput)\n\n","export const fetchBusinesses = (props) => {\n    return (dispatch) => {\n        dispatch({type: 'LOADING_BUSINESSES'})\n        return fetch(`http://localhost:3000/api/v1/search_businesses?term=${props.term}&location=${props.location}`)\n        .then(resp => resp.json())\n        .then(businesses => {\n            dispatch({type:'FETCH_BUSINESSES', payload: businesses})\n        })\n    }\n    \n    //do error handing on each action.\n}","Date.prototype.getUnixTime = function() { return this.getTime()/1000|0 };\nif(!Date.now) Date.now = function() { return new Date(); }\nDate.time = function() { return Date.now().getUnixTime(); }\n\nexport const fetchEvents = (props) => {\n    const searchDate = new Date(props.date)\n    return (dispatch) => {\n        dispatch({type:'LOADING_EVENT'})\n        return fetch(`http://localhost:3000/api/v1/search_events?location=${props.location}&date=${searchDate.getUnixTime()}`)\n        .then(resp => resp.json())\n        .then(events => dispatch({type:'FETCH_EVENT', payload: events}))\n    }\n}","import React, {Component} from 'react'\nimport './eventForm.css'\nimport { fetchEvents } from '../../actions/fetchEvents'\nimport { connect } from 'react-redux'\n\nexport class featuredEventInput extends Component {\n    constructor(){\n        super()\n        this.state={\n            location: '',\n            date: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchEvents(this.state)\n        this.setState({\n            location: ''\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"event-input-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <h2 className=\"zipcode-label\">Enter Your Zip Code, City or State to find The Featured Events Near You!</h2>\n                    <br/>\n                    <br/>\n                    <label className=\"location-label\">Location:</label>\n                    <input className=\"location-inputbox\" type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleChange}/>\n                    <label className=\"date-label\">Date:</label>\n                    <input className=\"date-inputbox\" type=\"date\" name=\"date\" value={this.state.data} onChange={this.handleChange}/>\n                    <br/>\n                    <input className=\"submit-button\" type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default connect(null, {fetchEvents})(featuredEventInput)\n\n","import React, {Component} from 'react';\nimport './user.css'\nimport {connect} from 'react-redux';\nimport {createUser} from '../../actions/createUser';\n\nclass Signup extends Component {\n    constructor(){\n        super()\n        this.state = {\n          first_name: '',\n          last_name: '',\n          email: \"\",\n          password: \"\"\n        }\n    }\n    \n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.createUser(this.state)\n    this.setState({\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form\">\n      <h1 className=\"signup-header\">Sign Up For An Account</h1>\n        <form onSubmit={this.handleSubmit}>\n      \n          <label className=\"first-name-label\">First Name</label>\n          <input \n            className=\"first-name-inputbox\"\n            name='first_name'\n            placeholder='First Name'\n            value={this.state.first_name}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label className=\"last-name-label\">Last Name</label>\n          <input \n            className=\"last-name-inputbox\"\n            name='last_name'\n            placeholder='Last Name'\n            value={this.state.last_name}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label className=\"email-label\">Email</label>\n          <input \n            className=\"email-inputbox\"\n            name='email'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label className=\"password-label\">Password</label>\n          <input \n            className=\"password-inputbox\"\n            type='password'\n            name='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            /><br/>\n\n          <input className=\"submit-button\" type='submit' value=\"Sign Up\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, {createUser})(Signup);","export const createUser = user => {\n    return dispatch => {\n      return fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({user})\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        if(data.message){\n          //display error message from invalid user\n          if(data.message.email && data.message.password){\n            alert(`Email & Password ${data.message.password[0]}`)\n          }\n          else if (data.message.email){\n            alert(`Email ${data.message.email[0]}`)\n          }\n          else if(data.message.password){\n            alert(`Password ${data.message.password[0]}`)\n          }\n        }\n        else{\n          //put currentUser in localStorage to have access across app\n          localStorage.setItem(\"currentUser\", JSON.stringify(data))\n          //dispatch to reducer storing the user in currentUser:{} inside of state object\n          dispatch({type:'LOGIN_USER', payload: data})\n        }\n      })\n  \n    }\n}","import './user.css'\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../../actions/loginUser';\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n          email: \"\",\n          password: \"\"\n        }\n\n    }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.loginUser(this.state)\n    this.setState({\n        email:'',\n        password: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <form onSubmit={this.handleSubmit}>\n          <h1 className=\"login-header\">Login</h1>\n\n          <label className=\"email-label\">Email</label>\n          <input\n            className=\"email-inputbox\"\n            name='email'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label className=\"password-label\">Password</label>\n          <input\n            className=\"password-inputbox\"\n            type='password'\n            name='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            /><br/>\n          <input className=\"submit-button\" type='submit' value='Log In'/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, {loginUser})(Login);\n","export const loginUser = (user) => {\n    return (dispatch) => {\n        user.email = user.email.slice(0,user.email.length-4)\n        //have to manually delete .com since it see .com as a format instead of part of the email\n        return fetch(`http://localhost:3000/api/v1/users/${JSON.stringify({user})}`)\n        .then(resp => resp.json())\n        .then(data => {\n            if(data.message){\n                //display error message\n                alert(data.message)\n            }\n            else{\n                //put currentUser in localStorage to have access across app\n                localStorage.setItem(\"currentUser\", JSON.stringify(data))\n                //dispatch to reducer storing the user in currentUser:{} inside of state object\n                dispatch({type:'LOGIN_USER', payload: data})\n            }\n        })\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware} from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/combineReducers';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport SearchBusinessesInput from './components/businesses/searchBusinessesInput';\nimport featuredEventInput from './components/featuredEvent/featuredEventInput'\nimport Signup from './components/users/Signup'\nimport Login from './components/users/Login'\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nconst link = {\n    width: '100px',\n    padding: '12px',\n    margin: '0 6px 6px',\n    background: 'black',\n    textDecoration: 'none',\n    color: 'white',\n    position: 'relative'\n  }\n  \n\n  const Navbar = () =>\n  <div id=\"navbar\">\n    <NavLink\n      to=\"/\"\n      /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n      exact\n      /* add styling to Navlink */\n      style={link}\n      \n      /* add prop for activeStyle */\n      activeStyle={{\n        background: 'red'\n      }}\n    >Home</NavLink>\n    <NavLink\n      to=\"/search_featured_event\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'red'\n      }}\n    >Featured Events</NavLink>\n    <NavLink\n      to=\"/search_businesses\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'red'\n      }}\n    >Search Foods</NavLink>\n        <NavLink\n        to=\"/signup\"\n        exact\n        style={link}\n        activeStyle={{\n          background: 'red'\n        }}\n        >Sign Up</NavLink> \n        <NavLink\n        to=\"/login\"\n        exact\n        style={link}\n        activeStyle={{\n          background: 'red'\n        }}\n        >Log In</NavLink>\n</div>\n  \n  const Home = () => {\n    return(\n    <div className=\"home-page\">\n      <h1 className=\"home-h1\"> Welcome to My Clone of Yelp!</h1> \n    </div>\n    )\n  }\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n      <Router>\n          <Navbar />\n          <React.Fragment>  \n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/search_featured_event\" component={featuredEventInput}/>\n            <Route exact path=\"/search_businesses\" component={SearchBusinessesInput}/>\n            <Route exact path=\"/signup\" component={Signup}/>\n            <Route exact path=\"/login\" component={Login}/>\n            </React.Fragment>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}