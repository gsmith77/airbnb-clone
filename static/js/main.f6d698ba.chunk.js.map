{"version":3,"sources":["components/reviews/addReviewInput.jsx","actions/postReview.js","components/reviews/Reviews.jsx","containers/ReviewsContainer.jsx","components/businesses/Business.jsx","components/businesses/Businesses.jsx","containers/BusinessesContainer.jsx","actions/fetchReviews.js","components/featuredEvent/FeaturedEvents.jsx","containers/FeaturedEventContainer.jsx","components/users/user.jsx","actions/logOutUser.js","App.js","serviceWorker.js","reducers/combineReducers.js","reducers/businessReducer.js","reducers/eventReducer.js","reducers/userReducer.js","components/businesses/searchBusinessesInput.jsx","actions/fetchBusinesses.js","components/featuredEvent/featuredEventInput.jsx","actions/fetchEvents.js","components/users/Signup.jsx","actions/createUser.js","components/users/Login.jsx","actions/loginUser.js","index.js"],"names":["AddReviewInput","props","handleChange","event","setState","target","name","value","changeRating","newRating","rating","handleSubmit","preventDefault","postReview","state","text","business","Fragment","onSubmit","this","type","onChange","min","max","Component","connect","review","dispatch","user","JSON","parse","localStorage","currentUser","user_name","first_name","last_name","fetch","method","headers","Accept","body","stringify","then","resp","json","data","Reviews","id","reviews","filter","businessId","map","style","width","key","businesses","ReviewsContainer","borderTop","borderBottom","Business","handleClick","fetchReviews","align","alt","src","image_url","price","review_count","categories","c","title","padding","textalign","display","fontsize","onClick","Businesses","margin","BusinessesContainer","includes","andSignIndex","indexOf","firstHalf","slice","secondHalf","length","payload","FeaturedEvents","listStyle","events","attending_count","description","time_start","time_end","FeaturedEventContainer","className","User","logout","currentUserId","removeItem","logOutUser","email","React","userId","alert","message","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","loading","action","Object","assign","flat","newReviews","initialState","term","SearchBusinessesInput","fetchBusinesses","featuredEventInput","fetchEvents","Signup","createUser","password","placeholder","setItem","Login","loginUser","store","createStore","applyMiddleware","thunk","link","background","textDecoration","color","position","ReactDOM","render","to","exact","activeStyle","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6d698ba.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {postReview} from '../../actions/postReview'\nimport { connect } from 'react-redux';\nimport NumericInput from 'react-numeric-input';\n\nclass AddReviewInput extends Component {\n  constructor(props){\n      super(props)\n      this.state = {\n        text:'',\n        rating: 1,\n        business: this.props.business\n      }\n    }\n\n    handleChange = (event) => {\n      this.setState({\n          [event.target.name]: event.target.value\n      })\n    }\n\n    changeRating = (newRating) => {\n      this.setState({\n        rating: newRating\n      })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      //grab currentuser from localstorage\n      this.props.postReview(this.state)\n      this.setState({\n        text: '',\n        rating: 1\n      })\n    }\n    \n    render(){\n      return(\n      <React.Fragment>\n        <form onSubmit={this.handleSubmit}>\n          <label>Leave Review</label>\n          <input type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange}/>\n          <NumericInput min={1} max={5} name=\"rating\" value={this.state.rating} onChange={this.changeRating}/>\n          <input type=\"submit\" value=\"Add Review\"/>\n        </form>\n      </React.Fragment>\n      )\n    }\n}\n\nexport default connect(null, {postReview})(AddReviewInput)\n","export const postReview = (review) => {\n    return (dispatch) => {\n        let user = JSON.parse(localStorage.currentUser)\n        let user_name = (user.first_name +\" \" + user.last_name)\n        //add user_name to review\n        review[\"user\"] = user\n        review[\"user_name\"] = user_name\n        return fetch(`http://localhost:3000/api/v1/reviews`, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n            },\n            body: JSON.stringify({review})\n          })\n        .then(resp => resp.json())\n        .then(data => {\n            debugger\n\n            //error handle\n            //dispatch to store reviews and display them\n        })\n    }\n}","import React, {Component} from 'react';\nimport AddReviewInput from './addReviewInput';\nimport { connect } from 'react-redux';\n\nclass Reviews extends Component {\n\n    render(){\n        const thisBusinessesReviews = () => {\n            let newProps = this.props.reviews.filter(review => { return (review.businessId === this.props.business.id)})\n            return newProps\n        }\n\n        const renderReviews = () => {\n            return thisBusinessesReviews().map(review => {\n                debugger\n                    return(\n                        <React.Fragment>\n                            <li style={{width: '300px'}} key={review.id}>\n                                <h4>{review.user ? review.user.name : review.user_name}</h4>\n                                {\"\\n\"}\n                                <p>Rating: {review.rating}</p>\n                                {\"\\n\"}\n                                <p>{review.text}</p>\n                            </li>\n                        </React.Fragment>\n                    )\n                }\n            )\n        }\n\n\n           return(\n                <div id=\"reviews\">\n                    {renderReviews()}\n                    <AddReviewInput business={this.props.business}/>\n                </div>\n           )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        businesses: state.businesses.businesses\n    }\n}\n\nexport default connect(mapStateToProps)(Reviews);","import React, {Component} from 'react'\nimport Reviews from '../components/reviews/Reviews'\nimport { connect } from 'react-redux'\n\nclass ReviewsContainer extends Component {\n    \n    render(){\n        return(\n            <div>\n                <ol id=\"allReviews\" style={{borderTop: \"3px solid rgb(100, 100, 100)\",borderBottom: \"3px solid rgb(100, 100, 100)\"}}>\n                    <Reviews business={this.props.business} reviews={this.props.reviews} />\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        reviews: state.businesses.reviews\n    }\n}\n\nexport default connect(mapStateToProps)(ReviewsContainer)","import React, {Component} from 'react'\nimport ReviewsContainer from '../../containers/ReviewsContainer'\n\nclass Business extends Component {\n\n    handleClick = (event) => {\n        event.preventDefault()\n        this.props.fetchReviews({id: this.props.business.id, name: this.props.business.name})\n    }\n    render(){\n        const buttonStyle ={padding: '15px 32px',\n            textalign: 'center',\n            display: 'inline-block',\n            fontsize: '16px'}\n        const business = this.props.business\n        return(\n            <div>\n                <li align=\"left\" key={business.id}>\n                    <h4>{business.name}</h4>\n                    <img style={{align: 'left', width: '500px'}}alt=\"single business\" id={business.name} src={business.image_url}></img>\n                    <br/>\n                    <section>\n                    Price: {business.price}\n                    <br/>\n                    Total Reviews:{business.review_count}\n                    <br/>\n                    \n                    Categories: {business.categories.map(c => <ul key={c.id}> - {c.title}</ul>)} \n                    <br/>                \n                    </section>\n                    <br/>\n                    <button style={buttonStyle} onClick={this.handleClick}>Reviews</button>\n                    <ReviewsContainer business={business}/>\n                </li>\n            </div>\n        )\n    }\n}\n\nexport default Business","import React, {Component} from 'react'\nimport Business from './Business'\n\nexport default class Businesses extends Component {\n    \n    render(){\n        const generateBusinesses = () => {\n            return this.props.businesses.map(business => {\n                return <Business key={business.id} business= {business} fetchReviews={this.props.fetchReviews}/>\n            })\n        }\n\n        return (\n            <div>\n                <ol id=\"list-of-businesses\" style={{margin: 10}}>\n                    {generateBusinesses()}\n                </ol>\n            </div>\n            \n        )\n    }\n\n}","import React, {Component} from 'react'\nimport Businesses from '../components/businesses/Businesses'\nimport { fetchReviews } from '../actions/fetchReviews'\nimport { connect } from 'react-redux'\n\nclass BusinessesContainer extends Component {\n\n    render(){\n        return(\n            <div id=\"businesses\" style={{display: 'inline-block'}}>\n                <Businesses businesses={this.props.businesses} fetchReviews={this.props.fetchReviews}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        businesses: state.businesses.businesses\n    }\n}\n\n\n\nexport default connect(mapStateToProps, {fetchReviews})(BusinessesContainer)","export const fetchReviews = (props) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_REVIEWS'})\n        if(props.name.includes('&')){\n            let andSignIndex = props.name.indexOf('&') \n            let firstHalf = props.name.slice(0, andSignIndex)\n            let and = \" and \"\n            let secondHalf = props.name.slice(andSignIndex + 1, props.name.length)\n            return fetch(`http://localhost:3000/api/v1/business_reviews?id=${props.id}&firstHalf=${firstHalf}&andSign=${and}&secondHalf=${secondHalf}`)\n            .then(resp => resp.json())\n            .then(reviews => {dispatch({type:'FETCH_REVIEWS', payload: [reviews, props.id]})})\n        }\n        else{\n            return fetch(`http://localhost:3000/api/v1/business_reviews?id=${props.id}&name=${props.name}`)\n            .then(resp => resp.json())\n            .then(reviews => {dispatch({type:'FETCH_REVIEWS', payload: [reviews, props.id]})})\n        }\n    }\n}","import React, {Component} from 'react'\n\nclass FeaturedEvents extends Component {    \n\n    \n    \n    render(){\n        const listStyle={align: 'left', width: '500px'}\n        const renderEvents = () => {\n            return this.props.events.map(event =>{\n                if(typeof event.name === \"string\"){\n                    return(\n                        <li style={listStyle} key={event.id}>\n                            <h2>{event.name}</h2>\n                            <img alt=\"See your Event Live!\" src={event.image_url}></img>\n                            <p>            \n                                {event.attending_count} guest(s) are attending\n                                {'\\n'}\n                                {event.description}\n                            </p>\n                            <p>From {event.time_start} to {event.time_end}</p>\n                        </li>\n                        )\n                    }\n                    else{\n                        return(\n                            <div></div>\n                        )\n                    }\n                }\n            )\n        }\n        return(\n            <div>{renderEvents()}</div>\n        )\n    }\n    \n}\n\nexport default FeaturedEvents","import React, {Component} from 'react'\nimport FeaturedEvents from '../components/featuredEvent/FeaturedEvents'\nimport { connect } from 'react-redux'\n\nclass FeaturedEventContainer extends Component{\n\n\n    render(){\n        return(\n            <div className=\"events-container\">\n                <ol id=\"list-of-events\">\n                    <FeaturedEvents events={this.props.events}/>\n                </ol>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        events: state.events.events\n    }\n}\n\nexport default connect(mapStateToProps)(FeaturedEventContainer)\n\n","import React from 'react'\nimport {logOutUser} from '../../actions/logOutUser'\nimport {connect} from 'react-redux'\n\nclass User extends React.Component{\n\n    logout = (currentUserId) => {\n        localStorage.removeItem(\"currentUser\")\n        this.props.logOutUser(currentUserId)\n    }\n\n    render(){\n        const currentUser = this.props.currentUser\n        if (currentUser !== null){\n            return(\n                <div id=\"userShowPage\">\n                    <h1>{currentUser.email}</h1>\n                    {\"\\n\"}\n                    <button onClick={() => this.logout(currentUser.id)}>Log Out</button>\n                </div>\n            )\n        }\n        else{\n            return null\n        }\n    }\n}\n\nexport default connect(null, {logOutUser})(User)\n\n","export const logOutUser = (userId) => {\n    return (dispatch) => {\n        return fetch(`http://localhost:3000/api/v1/logout?id=${userId}`)\n        .then(resp => resp.json())\n        .then(data => {\n            alert(data.message)\n            //use dispatch to clear currentUser out of state\n            dispatch({type:'LOGOUT_USER'})\n        })\n    }\n}","import React, { Component } from 'react';import './App.css';\nimport BusinessesContainer from './containers/BusinessesContainer'\nimport FeaturedEventContainer from './containers/FeaturedEventContainer'\nimport User from './components/users/user'\nimport {connect} from 'react-redux'\n\nexport class App extends Component{\n\n  render(){\n    return (\n      <div className=\"app\">\n        <BusinessesContainer />\n        <FeaturedEventContainer />\n        {this.props.currentUser !== null ? <User currentUser={this.props.currentUser}/> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      currentUser: state.user.currentUser}\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport businessReducer from './businessReducer'\nimport eventReducer from './eventReducer'\nimport userReducer from './userReducer'\n\nconst rootReducer = combineReducers({\n    businesses: businessReducer,\n    events: eventReducer,\n    user: userReducer\n})\n\nexport default rootReducer;","export default function businessReducer(state = {loading: false, businesses: [], reviews: []}, action){\n    switch(action.type){\n\n        case 'LOADING_BUSINESSES':\n            \n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_BUSINESSES':\n            \n            return {...state, businesses: [...state.businesses, action.payload].flat(), loading: false}\n\n        //REVIEWSREDUCER\n\n        case 'LOADING_REVIEWS':\n\n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_REVIEWS':\n            const newReviews= action.payload[0].map(review => {\n                return(review = {...review, businessId: action.payload[1] })\n            })\n            return {...state, reviews: [...state.reviews, newReviews].flat(), loading:false} \n\n        default:\n            return state\n    }\n}","export default function eventReducer(state={ loading: false, events: []}, action){\n    switch(action.type){\n        case 'LOADING_EVENT':\n\n            return Object.assign({}, {...state}, {loading: true})\n\n        case 'FETCH_EVENT':\n\n            return {...state, events: [...state.events, action.payload].flat(), loading: false}\n\n        default:\n\n            return state\n    }\n}","export default function userReducer(state={currentUser: {}}, action){\n    switch(action.type){\n        case 'LOGIN_USER':\n        //set user that was created as currentUser for \n        //state management across the App\n\n            return {...state, currentUser: action.payload}\n\n        case 'LOGOUT_USER':\n\n            return {...state, currentUser: null}\n\n        default:\n\n            return {...state, currentUser: null}\n\n    }\n\n}","import React, {Component} from 'react'\nimport './Input.css'\nimport { fetchBusinesses } from '../../actions/fetchBusinesses'\nimport { connect } from 'react-redux'\nconst initialState = {\n    term: '',\n    location: ''\n}\n\nexport class SearchBusinessesInput extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            term: '',\n            location: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchBusinesses(this.state)\n        this.setState(initialState)\n    }\n\n    render(){\n\n        return(\n     \n            <div className=\"input\">\n                <form onSubmit={this.handleSubmit} className=\"search-businesses-input\">\n                    <h1> PUT A TITLE HERE FOR SEARCHING FOODS</h1>\n                    <h2 className=\"looking-for-header\">What Are You Looking For?</h2>\n                    <input className=\"looking-for-inputbox\" type=\"text\" name=\"term\" value={this.state.term} onChange={this.handleChange}/>\n                    <br/>\n                    <h2 className=\"location-header\">Location:</h2>\n                    <input className=\"location-inputbox\" type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleChange}/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <input className=\"submit-button\" type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default connect(null, {fetchBusinesses})(SearchBusinessesInput)\n\n","export const fetchBusinesses = (props) => {\n    return (dispatch) => {\n        dispatch({type: 'LOADING_BUSINESSES'})\n        return fetch(`http://localhost:3000/api/v1/search_businesses?term=${props.term}&location=${props.location}`)\n        .then(resp => resp.json())\n        .then(businesses => {\n            dispatch({type:'FETCH_BUSINESSES', payload: businesses})\n            })\n    }\n    \n    //do error handing on each action.\n}","import React, {Component} from 'react'\nimport './eventForm.css'\nimport { fetchEvents } from '../../actions/fetchEvents'\nimport { connect } from 'react-redux'\n\nexport class featuredEventInput extends Component {\n    constructor(){\n        super()\n        this.state={\n            location: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchEvents(this.state)\n        this.setState({\n            location: ''\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"event-input-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <h2 className=\"zipcode-label\">Enter Your Zip Code, City or State to find The Featured Events Near You!</h2>\n                    <br/>\n                    <br/>\n                    <label className=\"location-label\">Location:</label>\n                    <input className=\"location-inputbox\"type=\"text\" name=\"location\" value={this.state.location} onChange={this.handleChange}/>\n                    <br/>\n                    <input className=\"submit-button\" type=\"submit\"/>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default connect(null, {fetchEvents})(featuredEventInput)\n\n","export const fetchEvents = (props) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_EVENT'})\n        return fetch(`http://localhost:3000/api/v1/search_events?location=${props.location}`)\n        .then(resp => resp.json())\n        .then(events => dispatch({type:'FETCH_EVENT', payload: events}))\n    }\n}","import React, {Component} from 'react';\nimport './user.css'\nimport {connect} from 'react-redux';\nimport {createUser} from '../../actions/createUser';\n\nclass Signup extends Component {\n    constructor(){\n        super()\n        this.state = {\n          first_name: '',\n          last_name: '',\n          email: \"\",\n          password: \"\"\n        }\n    }\n    \n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.createUser(this.state)\n    this.setState({\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"signup-form\">\n      <h1>Sign Up For An Account</h1>\n        <form onSubmit={this.handleSubmit}>\n\n          <label>First Name</label>\n          <input\n            name='first_name'\n            placeholder='First Name'\n            value={this.state.first_name}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label>Last Name</label>\n          <input\n            name='last_name'\n            placeholder='Last Name'\n            value={this.state.last_name}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label>Email</label>\n          <input\n            name='email'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label>Password</label>\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            /><br/>\n\n          <input type='submit' value=\"Sign Up\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, {createUser})(Signup);","export const createUser = user => {\n    return dispatch => {\n      return fetch(\"http://localhost:3000/api/v1/users\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n        },\n        body: JSON.stringify({user})\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        if(data.message){\n          //display error message from invalid user\n          if(data.message.email && data.message.password){\n            alert(`Email & Password ${data.message.password[0]}`)\n          }\n          else if (data.message.email){\n            alert(`Email ${data.message.email[0]}`)\n          }\n          else if(data.message.password){\n            alert(`Password ${data.message.password[0]}`)\n          }\n        }\n        else{\n          //put currentUser in localStorage to have access across app\n          localStorage.setItem(\"currentUser\", JSON.stringify(data))\n          //dispatch to reducer storing the user in currentUser:{} inside of state object\n          dispatch({type:'LOGIN_USER', payload: data})\n        }\n      })\n  \n    }\n}","import './user.css'\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../../actions/loginUser';\n\nclass Login extends Component {\n    constructor(){\n        super()\n        this.state = {\n          email: \"\",\n          password: \"\"\n        }\n\n    }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.loginUser(this.state)\n    this.setState({\n        email:'',\n        password: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <form onSubmit={this.handleSubmit}>\n          <h1 className=\"login-header\">Login</h1>\n\n          <label>Email</label>\n          <input\n            name='email'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            /><br/>\n\n          <label>Password</label>\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            /><br/>\n\n          <input type='submit' value='Log In'/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, {loginUser})(Login);\n","export const loginUser = (user) => {\n    return (dispatch) => {\n        user.email = user.email.slice(0,user.email.length-4)\n        //have to manually delete .com since it see .com as a format instead of part of the email\n        return fetch(`http://localhost:3000/api/v1/users/${JSON.stringify({user})}`)\n        .then(resp => resp.json())\n        .then(data => {\n            if(data.message){\n                //display error message\n                alert(data.message)\n            }\n            else{\n                //put currentUser in localStorage to have access across app\n                localStorage.setItem(\"currentUser\", JSON.stringify(data))\n                //dispatch to reducer storing the user in currentUser:{} inside of state object\n                dispatch({type:'LOGIN_USER', payload: data})\n            }\n        })\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware} from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers/combineReducers';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport SearchBusinessesInput from './components/businesses/searchBusinessesInput';\nimport featuredEventInput from './components/featuredEvent/featuredEventInput'\nimport Signup from './components/users/Signup'\nimport Login from './components/users/Login'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nconst link = {\n    width: '100px',\n    padding: '12px',\n    margin: '0 6px 6px',\n    background: 'black',\n    textDecoration: 'none',\n    color: 'white',\n    position: 'relative'\n  }\n  \n\n  const Navbar = () =>\n  <div id=\"navbar\">\n    <NavLink\n      to=\"/\"\n      /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n      exact\n      /* add styling to Navlink */\n      style={link}\n      \n      /* add prop for activeStyle */\n      activeStyle={{\n        background: 'red'\n      }}\n    >Home</NavLink>\n    <NavLink\n      to=\"/search_featured_event\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'red'\n      }}\n    >Featured Events</NavLink>\n    <NavLink\n      to=\"/search_businesses\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'red'\n      }}\n    >Search Foods</NavLink>\n        <NavLink\n        to=\"/signup\"\n        exact\n        style={link}\n        activeStyle={{\n          background: 'red'\n        }}\n        >Sign Up</NavLink> \n        <NavLink\n        to=\"/login\"\n        exact\n        style={link}\n        activeStyle={{\n          background: 'red'\n        }}\n        >Log In</NavLink>\n</div>\n  \n  const Home = () => {\n    return(\n    <div className=\"home-page\">\n      <h1 className=\"home-h1\"> Welcome to My Clone of Yelp!</h1> \n      <h3 className=\"subtitle-h3\"> Hurry up and Search something! I am getting hungry!</h3>\n    </div>\n    )\n  }\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n      <Router>\n          <Navbar />\n          <React.Fragment>  \n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/search_featured_event\" component={featuredEventInput}/>\n            <Route exact path=\"/search_businesses\" component={SearchBusinessesInput}/>\n            <Route exact path=\"/signup\" component={Signup}/>\n            <Route exact path=\"/login\" component={Login}/>\n            </React.Fragment>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}